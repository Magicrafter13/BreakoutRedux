#include "Levels.hpp"

#define levelsets 2

// TODO: oh my gosh this is the most painful thing to look at please find a better way to do this """efficiently"""
std::vector<std::vector<Brick>> LevelSet[levelsets] = {
	std::vector<std::vector<Brick>> {
		std::vector<Brick> {
			Brick(2, 2, 36, 16, 4),
			Brick(42, 2, 36, 16, 4),
			Brick(82, 2, 36, 16, 4),
			Brick(122, 2, 36, 16, 4),
			Brick(162, 2, 36, 16, 4),
			Brick(202, 2, 36, 16, 4),
			Brick(242, 2, 36, 16, 4),
			Brick(282, 2, 36, 16, 4),
			Brick(322, 2, 36, 16, 4),
			Brick(362, 2, 36, 16, 4),
			Brick(2, 22, 36, 16, 3),
			Brick(42, 22, 36, 16, 3),
			Brick(82, 22, 36, 16, 3),
			Brick(122, 22, 36, 16, 3),
			Brick(162, 22, 36, 16, 3),
			Brick(202, 22, 36, 16, 3),
			Brick(242, 22, 36, 16, 3),
			Brick(282, 22, 36, 16, 3),
			Brick(322, 22, 36, 16, 3),
			Brick(362, 22, 36, 16, 3),
			Brick(2, 42, 36, 16, 2),
			Brick(42, 42, 36, 16, 2),
			Brick(82, 42, 36, 16, 2),
			Brick(122, 42, 36, 16, 2),
			Brick(162, 42, 36, 16, 2),
			Brick(202, 42, 36, 16, 2),
			Brick(242, 42, 36, 16, 2),
			Brick(282, 42, 36, 16, 2),
			Brick(322, 42, 36, 16, 2),
			Brick(362, 42, 36, 16, 2),
			Brick(2, 62, 36, 16, 1),
			Brick(42, 62, 36, 16, 1),
			Brick(82, 62, 36, 16, 1),
			Brick(122, 62, 36, 16, 1),
			Brick(162, 62, 36, 16, 1),
			Brick(202, 62, 36, 16, 1),
			Brick(242, 62, 36, 16, 1),
			Brick(282, 62, 36, 16, 1),
			Brick(322, 62, 36, 16, 1),
			Brick(362, 62, 36, 16, 1),
			Brick(2, 82, 36, 16, 0),
			Brick(42, 82, 36, 16, 0),
			Brick(82, 82, 36, 16, 0),
			Brick(122, 82, 36, 16, 0),
			Brick(162, 82, 36, 16, 0),
			Brick(202, 82, 36, 16, 0),
			Brick(242, 82, 36, 16, 0),
			Brick(282, 82, 36, 16, 0),
			Brick(322, 82, 36, 16, 0),
			Brick(362, 82, 36, 16, 0)
		},
		std::vector<Brick> {
			Brick(2, 2, 36, 16, 4),
			Brick(42, 2, 36, 16, 4),
			Brick(2, 22, 36, 16, 3),
			Brick(42, 22, 36, 16, 3),
			Brick(82, 22, 36, 16, 3),
			Brick(122, 22, 36, 16, 3),
			Brick(2, 42, 36, 16, 2),
			Brick(42, 42, 36, 16, 2),
			Brick(82, 42, 36, 16, 2),
			Brick(122, 42, 36, 16, 2),
			Brick(162, 42, 36, 16, 2),
			Brick(202, 42, 36, 16, 2),
			Brick(2, 62, 36, 16, 1),
			Brick(42, 62, 36, 16, 1),
			Brick(82, 62, 36, 16, 1),
			Brick(122, 62, 36, 16, 1),
			Brick(162, 62, 36, 16, 1),
			Brick(202, 62, 36, 16, 1),
			Brick(242, 62, 36, 16, 1),
			Brick(282, 62, 36, 16, 1),
			Brick(2, 82, 36, 16, 0),
			Brick(42, 82, 36, 16, 0),
			Brick(82, 82, 36, 16, 0),
			Brick(122, 82, 36, 16, 0),
			Brick(162, 82, 36, 16, 0),
			Brick(202, 82, 36, 16, 0),
			Brick(242, 82, 36, 16, 0),
			Brick(282, 82, 36, 16, 0),
			Brick(322, 82, 36, 16, 0),
			Brick(362, 82, 36, 16, 0)
		},
		std::vector<Brick> {
			Brick(42, 2, 36, 16, 0),
			Brick(322, 2, 36, 16, 0),
			Brick(42, 22, 36, 16, 9),
			Brick(322, 22, 36, 16, 5),
			Brick(42, 42, 36, 16, 7),
			Brick(322, 42, 36, 16, 8),
			Brick(42, 62, 36, 16, 8),
			Brick(82, 62, 36, 16, 2),
			Brick(122, 62, 36, 16, 0),
			Brick(162, 62, 36, 16, 2),
			Brick(202, 62, 36, 16, 3),
			Brick(242, 62, 36, 16, 2),
			Brick(282, 62, 36, 16, 1),
			Brick(322, 62, 36, 16, 7),
			Brick(42, 82, 36, 16, 5),
			Brick(82, 82, 36, 16, 2),
			Brick(122, 82, 36, 16, 2),
			Brick(162, 82, 36, 16, 4),
			Brick(202, 82, 36, 16, 2),
			Brick(242, 82, 36, 16, 1),
			Brick(282, 82, 36, 16, 1),
			Brick(322, 82, 36, 16, 9)
		},
		std::vector<Brick> {
			Brick(82, 2, 36, 16, 0),
			Brick(122, 2, 36, 16, 0),
			Brick(162, 2, 36, 16, 1),
			Brick(202, 2, 36, 16, 1),
			Brick(242, 2, 36, 16, 0),
			Brick(282, 2, 36, 16, 0),
			Brick(2, 22, 36, 16, 0),
			Brick(42, 22, 36, 16, 0),
			Brick(82, 22, 36, 16, 1),
			Brick(122, 22, 36, 16, 1),
			Brick(162, 22, 36, 16, 2),
			Brick(202, 22, 36, 16, 2),
			Brick(242, 22, 36, 16, 1),
			Brick(282, 22, 36, 16, 1),
			Brick(322, 22, 36, 16, 0),
			Brick(362, 22, 36, 16, 0),
			Brick(2, 42, 36, 16, 1),
			Brick(42, 42, 36, 16, 1),
			Brick(82, 42, 36, 16, 2),
			Brick(122, 42, 36, 16, 2),
			Brick(162, 42, 36, 16, 8),
			Brick(202, 42, 36, 16, 8),
			Brick(242, 42, 36, 16, 2),
			Brick(282, 42, 36, 16, 2),
			Brick(322, 42, 36, 16, 1),
			Brick(362, 42, 36, 16, 1),
			Brick(2, 62, 36, 16, 0),
			Brick(42, 62, 36, 16, 0),
			Brick(82, 62, 36, 16, 1),
			Brick(122, 62, 36, 16, 1),
			Brick(162, 62, 36, 16, 2),
			Brick(202, 62, 36, 16, 2),
			Brick(242, 62, 36, 16, 1),
			Brick(282, 62, 36, 16, 1),
			Brick(322, 62, 36, 16, 0),
			Brick(362, 62, 36, 16, 0),
			Brick(82, 82, 36, 16, 0),
			Brick(122, 82, 36, 16, 0),
			Brick(162, 82, 36, 16, 1),
			Brick(202, 82, 36, 16, 1),
			Brick(242, 82, 36, 16, 0),
			Brick(282, 82, 36, 16, 0)
		},
		std::vector<Brick> {
			Brick(2, 2, 36, 16, 4),
			Brick(82, 2, 36, 16, 2),
			Brick(122, 2, 36, 16, 1),
			Brick(242, 2, 36, 16, 1),
			Brick(282, 2, 36, 16, 2),
			Brick(362, 2, 36, 16, 4),
			Brick(2, 22, 36, 16, 3),
			Brick(42, 22, 36, 16, 7),
			Brick(82, 22, 36, 16, 1),
			Brick(122, 22, 36, 16, 0),
			Brick(162, 22, 36, 16, 9),
			Brick(202, 22, 36, 16, 9),
			Brick(242, 22, 36, 16, 0),
			Brick(282, 22, 36, 16, 1),
			Brick(322, 22, 36, 16, 7),
			Brick(362, 22, 36, 16, 3),
			Brick(42, 42, 36, 16, 1),
			Brick(162, 42, 36, 16, 8),
			Brick(202, 42, 36, 16, 8),
			Brick(322, 42, 36, 16, 1),
			Brick(2, 62, 36, 16, 3),
			Brick(42, 62, 36, 16, 7),
			Brick(82, 62, 36, 16, 1),
			Brick(122, 62, 36, 16, 0),
			Brick(162, 62, 36, 16, 9),
			Brick(202, 62, 36, 16, 9),
			Brick(242, 62, 36, 16, 0),
			Brick(282, 62, 36, 16, 1),
			Brick(322, 62, 36, 16, 7),
			Brick(362, 62, 36, 16, 3),
			Brick(2, 82, 36, 16, 4),
			Brick(82, 82, 36, 16, 2),
			Brick(122, 82, 36, 16, 1),
			Brick(242, 82, 36, 16, 1),
			Brick(282, 82, 36, 16, 2),
			Brick(362, 82, 36, 16, 4)
		}
	},
	std::vector<std::vector<Brick>> {
		std::vector<Brick> {

		}
	}
};

std::vector<Brick> *GetLevel(size_t levelSet, size_t level) {
	if (levelSet < levelsets)
		if (level < LevelSet[levelSet].size())
			return &LevelSet[levelSet][level];
	return new std::vector<Brick>();
}

bool SetLevel(size_t levelSet, size_t level, std::vector<Brick> bricks) {
	if (levelSet == 0)
		return false;
	if (level > LevelSet[levelSet].size())
		return false;
	if (level == LevelSet[levelSet].size())
		LevelSet[levelSet].push_back(bricks);
	else
		LevelSet[levelSet][level] = bricks;
	return true;
}
